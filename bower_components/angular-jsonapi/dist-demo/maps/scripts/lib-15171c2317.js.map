{"version":3,"sources":["scripts/lib-15171c2317.js"],"names":["angular","module","AngularJsonAPISourceRestWrapper","AngularJsonAPIModelSourceError","AngularJsonAPISourcePrototype","AngularJsonAPIModelLinkerService","toKebabCase","$q","$http","AngularJsonAPISourceRestFactory","name","url","AngularJsonAPISourceRest","all","config","method","headers","params","encodeParams","then","resolveHttp","rejectHttp","bind","get","object","data","id","remove","unlink","deferred","defer","schema","relationships","key","removed","reject","create","_this","undefined","target","type","resolve","promise","link","errors","status","statusText","toLinkData","update","form","toJson","add","response","action","rejectServerOffline","rejectNoConnection","this","Accept","Content-Type","apply","arguments","synchronization","encodeValue","argument","isArray","join","encodedParams","forEach","paramValue","paramKey","isObject","paramInnerValue","paramInnerKey","decodeParams","decodedParams","value","objectKeyStart","indexOf","split","objectKey","substr","objectElementKey","prototype","Object","constructor","factory","$inject","provide","$provide","decorator","$delegate","$jsonapi","sourceRest","AngularJsonAPISourceLocalWrapper","$window","AngularJsonAPISourceLocalFactory","prefix","AngularJsonAPISourceLocal","init","synchronizer","resource","localStorage","getItem","clear","size","list","max","objectMaxKey","fraction","limit","removeItem","updateStorage","cache","json","length","setItem","keys","reduce","m","k","__updateStorage","begin","finish","sourceLocal","constant","pluralize","validate","AngularJsonAPIResourceCacheWrapper","uuid4","$log","AngularJsonAPIResourceCacheFactory","AngularJsonAPIResourceCache","indexIds","addOrUpdate","validatedData","updatedAt","error","modelFactory","initialization","fromJson","collection","new","synchronized","stable","pristine","objectData","hasErrors","push","index","filter","filterParams","valid","constraint","attributes","map","setIndexIds","array","element","isString","revertRemove","clearRemoved","oneWay","polymorphic","model","__addHasMany","__processAddHasMany","__addHasOne","__processAddHasOne","__removeHasMany","__processRemove","reflectionSchema","reflectionKey","reflection","__swapResults","__wrapResults","oldReflectionSchema","oldReflection","result","__removeHasOne","debug","reset","linkData","splice","newValue","item","i","service","AngularJsonAPIModelFormWrapper","AngularJsonAPIModelValidationError","validateJS","AngularJsonAPIModelFormFactory","parent","AngularJsonAPIModelForm","copy","save","auto","slice","validator","validation","errorsMap","attribute","attributesWrapper","constraintsWrapper","async","AngularJsonAPIAbstractModelWrapper","AngularJsonAPIModelErrorsManager","$rootScope","$injector","AngularJsonAPIAbstractModel","loading","saving","Date","now","loadingCount","savingCount","__setData","synchronize","notify","$emit","concat","meta","__decrementSavingCounter","__incrementSavingCounter","refresh","synchronizeIncluded","__incrementLoadingCounter","__decrementLoadingCounter","resolveIncluded","includedResponse","operation","success","results","included","__proccesResults","allSettled","unlinkAll","removeLink","linksObj","removeReflectionLink","resolveReflection","targets","answer","setAttributes","validators","setRelationships","relationshipData","links","linkOne","unlinkOne","getResource","AngularJsonAPIModelValidationErrorWrapper","ValidationErrorFactory","message","ValidationError","context","Error","AngularJsonAPIModelSourceErrorWrapper","SourceErrorFactory","source","code","SourceError","AngularJsonAPIModelErrorsManagerWrapper","ErrorsManagerFactory","description","ErrorConstructor","defaultFilter","ErrorsManager","obj","namedFunction","fn","Function","propertyName","callback","done","defineProperty","call","enumerable","configurable","str","replace","toLowerCase","promises","resolvedCallback","rejectedCallback","wrap","isFunction","reason","wrapped","hasOwnProperty","AngularJsonAPISynchronizerSimpleWrapper","AngularJsonAPISynchronizerPrototype","AngularJsonAPISynchronizerSimpleFactory","sources","AngularJsonAPISynchronizerSimple","state","step","resolved","afterHooks","hook","finishHooks","rejected","noop","beginHooks","beforeHooks","synchronizationHooks","AngularJsonAPISynchronizerPrototypeWrapper","AngularJsonAPISourcePrototypeWrapper","allHooks","options","hookName","beforeSynchro","afterSynchro","before","after","AngularJsonAPISchemaWrapper","AngularJsonAPISchemaLink","AngularJsonAPISchemaFactory","AngularJsonAPISchema","include","generate","isNumber","identity","linkSchema","linkName","linkSchemaObj","extend","AngularJsonAPILinkSchrapperLink","AngularJsonAPISchemaLinkFactory","plural","singular","AngularJsonAPIResourceWrapper","AngularJsonAPIModel","AngularJsonAPICollection","AngularJsonAPIResourceFactory","AngularJsonAPIResource","initialized","fetch","initialize","relationshipSchema","relationshipName","clearCache","createModelFactory","schemaObj","isNew","Model","constructorName","functions","metaFunction","metaFunctionName","AngularJsonAPICollectionWrapper","AngularJsonAPICollectionFactory","event","clearWatchers","onObjectRemove","onFactoryClear","onObjectAdd","$on","jsonapiProvider","jsonapiFactory","addResource","memory","names","allResources","listResources","addValidator","warn","objects","synchronizerSimple","$get","provider","$logProvider","debugEnabled","run","Promise"],"mappings":"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","file":"scripts/lib-15171c2317.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest', ['angular-jsonapi']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .factory('AngularJsonAPISourceRest', AngularJsonAPISourceRestWrapper);\n\n  function AngularJsonAPISourceRestWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPISourcePrototype,\n    AngularJsonAPIModelLinkerService,\n    toKebabCase,\n    $q,\n    $http\n  ) {\n\n    AngularJsonAPISourceRest.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceRest.prototype.constructor = AngularJsonAPISourceRest;\n\n    return {\n      create: AngularJsonAPISourceRestFactory,\n      encodeParams: encodeParams,\n      decodeParams: decodeParams\n    };\n\n    function AngularJsonAPISourceRestFactory(name, url) {\n      return new AngularJsonAPISourceRest(name, url);\n    }\n\n    function AngularJsonAPISourceRest(name, url) {\n      var _this = this;\n      var headers = { // jscs:disable disallowQuotedKeysInObjects\n        'Accept': 'application/vnd.api+json',\n        'Content-Type': 'application/vnd.api+json'\n      }; // jscs:enable disallowQuotedKeysInObjects\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('remove', remove);\n      _this.synchronization('unlink', unlink);\n      _this.synchronization('link', link);\n      _this.synchronization('update', update);\n      _this.synchronization('add', add);\n      _this.synchronization('all', all);\n      _this.synchronization('get', get);\n      _this.synchronization('refresh', get);\n\n      function all(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'all'));\n      }\n\n      function get(config) {\n        return $http({\n          method: 'GET',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          params: encodeParams(config.params)\n        }).then(resolveHttp, rejectHttp.bind(null, 'get'));\n      }\n\n      function remove(config) {\n        return $http({\n          method: 'DELETE',\n          headers: headers,\n          url: url + '/' + config.object.data.id\n        }).then(resolveHttp, rejectHttp.bind(null, 'remove'));\n      }\n\n      function unlink(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Object has been removed', _this, 0, 'unlink'));\n        } else if (config.target !== undefined && config.target.data.id === undefined) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Can\\'t unlink object without id through rest call', _this, 0, 'unlink'));\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'DELETE',\n            headers: headers,\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'get')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          if (config.target === undefined) {\n            $http({\n              method: 'PUT',\n              headers: headers,\n              data: {data: []},\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          } else {\n            $http({\n              method: 'DELETE',\n              headers: headers,\n              url: url + '/' + config.object.data.id + '/relationships/' + config.key + '/' + config.target.data.id\n            }).then(resolveHttp, rejectHttp.bind(null, 'unlink')).then(deferred.resolve, deferred.reject);\n          }\n        }\n\n        return deferred.promise;\n      }\n\n      function link(config) {\n        var deferred = $q.defer();\n        var schema = config.object.schema.relationships[config.key];\n\n        if (config.object.removed === true) {\n          deferred.reject({errors: [{status: 0, statusText: 'Object has been removed'}]});\n        } else if (config.target === undefined || config.target.data.id === undefined) {\n          deferred.reject({errors: [{status: 0, statusText: 'Can\\'t link object without id through rest call'}]});\n        } else if (schema.type === 'hasOne') {\n          $http({\n            method: 'PUT',\n            headers: headers,\n            data: {data: AngularJsonAPIModelLinkerService.toLinkData(config.target)},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        } else if (schema.type === 'hasMany') {\n          $http({\n            method: 'POST',\n            headers: headers,\n            data: {data: [AngularJsonAPIModelLinkerService.toLinkData(config.target)]},\n            url: url + '/' + config.object.data.id + '/relationships/' + config.key\n          }).then(resolveHttp, rejectHttp.bind(null, 'link')).then(deferred.resolve, deferred.reject);\n        }\n\n        return deferred.promise;\n      }\n\n      function update(config) {\n        return $http({\n          method: 'PUT',\n          headers: headers,\n          url: url + '/' + config.object.data.id,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'update'));\n      }\n\n      function add(config) {\n        return $http({\n          method: 'POST',\n          headers: headers,\n          url: url,\n          data: config.object.form.toJson()\n        }).then(resolveHttp, rejectHttp.bind(null, 'add'));\n      }\n\n      function resolveHttp(response) {\n        return $q.resolve(response.data);\n      }\n\n      function rejectHttp(action, response) {\n        var deferred = $q.defer();\n\n        if (response.status === 0) {\n          $http({\n            method: 'GET',\n            url: 'https://status.cloud.google.com/incidents.schema.json'\n          }).then(rejectServerOffline, rejectNoConnection);\n        } else {\n          deferred.reject(AngularJsonAPIModelSourceError.create(response.statusText, _this, response.status, action));\n        }\n\n        return deferred.promise;\n\n        function rejectServerOffline(response) {\n          deferred.reject(AngularJsonAPIModelSourceError.create('Server is offline', _this, response.status, action));\n        }\n\n        function rejectNoConnection() {\n          deferred.reject(AngularJsonAPIModelSourceError.create('No internet connection', _this, response.status, action));\n        }\n      }\n    }\n\n    function encodeParams(params) {\n      var encodedParams = {};\n\n      if (params === undefined) {\n        return {};\n      }\n\n      angular.forEach(params, function(paramValue, paramKey) {\n        if (angular.isArray(paramValue)) {\n          encodedParams[paramKey] = encodeValue(paramValue);\n        } else if (angular.isObject(paramValue)) {\n          angular.forEach(paramValue, function(paramInnerValue, paramInnerKey) {\n            encodedParams[paramKey + '[' + paramInnerKey + ']'] = encodeValue(paramInnerValue);\n          });\n        } else {\n          encodedParams[paramKey] = paramValue;\n        }\n      });\n\n      return encodedParams;\n\n      function encodeValue(argument) {\n        if (angular.isArray(argument)) {\n          return argument.join(',');\n        } else {\n          return argument;\n        }\n      }\n    }\n\n    function decodeParams(params) {\n      var decodedParams = {};\n\n      angular.forEach(params, function(value, key) {\n        var objectKeyStart = key.indexOf('[');\n        value = value.split(',');\n\n        if (objectKeyStart > -1) {\n          var objectKey = key.substr(0, objectKeyStart);\n          var objectElementKey = key.substr(objectKeyStart + 1, key.indexOf(']') - objectKeyStart - 1);\n\n          decodedParams[objectKey] = decodedParams[objectKey] || {};\n          decodedParams[objectKey][objectElementKey] = value;\n        } else {\n          decodedParams[key] = value;\n        }\n      });\n\n      return decodedParams;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-rest')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceRest) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceRest = AngularJsonAPISourceRest;\n\n    return $jsonapi;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local', ['angular-jsonapi']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .factory('AngularJsonAPISourceLocal', AngularJsonAPISourceLocalWrapper);\n\n  function AngularJsonAPISourceLocalWrapper(\n    AngularJsonAPISourcePrototype,\n    $window,\n    $q\n  ) {\n    var size = {\n      max: 0,\n      all: 0,\n      limit: 5200000,\n      list: {}\n    };\n\n    AngularJsonAPISourceLocal.prototype = Object.create(AngularJsonAPISourcePrototype.prototype);\n    AngularJsonAPISourceLocal.prototype.constructor = AngularJsonAPISourceLocal;\n\n    return {\n      create: AngularJsonAPISourceLocalFactory,\n      size: size\n    };\n\n    function AngularJsonAPISourceLocalFactory(name, prefix) {\n      return new AngularJsonAPISourceLocal(name, prefix);\n    }\n\n    function AngularJsonAPISourceLocal(name, prefix) {\n      var _this = this;\n\n      prefix = prefix || 'AngularJsonAPI';\n\n      _this.__updateStorage = updateStorage;\n\n      AngularJsonAPISourcePrototype.apply(_this, arguments);\n\n      _this.synchronization('init', init);\n\n      _this.begin('clearCache', clear);\n\n      _this.finish('init', updateStorage);\n      _this.finish('clearCache', updateStorage);\n      _this.finish('remove', updateStorage);\n      _this.finish('refresh', updateStorage);\n      _this.finish('unlink', updateStorage);\n      _this.finish('unlinkReflection', updateStorage);\n      _this.finish('link', updateStorage);\n      _this.finish('linkReflection', updateStorage);\n      _this.finish('update', updateStorage);\n      _this.finish('add', updateStorage);\n      _this.finish('get', updateStorage);\n      _this.finish('all', updateStorage);\n      _this.finish('include', updateStorage);\n\n      function init() {\n        var type = _this.synchronizer.resource.schema.type;\n        return $q.resolve($window.localStorage.getItem(prefix + '.' + type));\n      }\n\n      function clear() {\n        var type = _this.synchronizer.resource.schema.type;\n        var key = prefix + '.' + type;\n\n        size.all -= size.list[key];\n        delete size.list[key];\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.removeItem(key);\n      }\n\n      function updateStorage() {\n        var type = _this.synchronizer.resource.schema.type;\n        var cache = _this.synchronizer.resource.cache;\n        var json = cache.toJson();\n        var key = prefix + '.' + type;\n\n        size.list[key] = size.list[key] === undefined ? 0 : size.list[key];\n        size.all += json.length - size.list[key];\n        size.list[key] = json.length;\n        size.max = objectMaxKey(size.list);\n        size.fraction = size.list[size.max] / size.limit * 100;\n\n        $window.localStorage.setItem(key, json);\n      }\n\n      function objectMaxKey(object) {\n        return Object.keys(object).reduce(function(m, k) {\n          return object[k] > object[m] ? k : m;\n        }, Object.keys(object)[0]);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi-local')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$jsonapi', decorator);\n  }\n\n  function decorator($delegate, AngularJsonAPISourceLocal) {\n    var $jsonapi = $delegate;\n\n    $jsonapi.sourceLocal = AngularJsonAPISourceLocal;\n\n    return $jsonapi;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi', ['uuid4'])\n  /* global pluralize: false, validate: false */\n  .constant('pluralize', pluralize)\n  .constant('validateJS', validate);\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResourceCache', AngularJsonAPIResourceCacheWrapper);\n\n  function AngularJsonAPIResourceCacheWrapper(\n    uuid4,\n    $log\n  ) {\n\n    AngularJsonAPIResourceCache.prototype.get = get;\n    AngularJsonAPIResourceCache.prototype.index = index;\n    AngularJsonAPIResourceCache.prototype.setIndexIds = setIndexIds;\n    AngularJsonAPIResourceCache.prototype.addOrUpdate = addOrUpdate;\n\n    AngularJsonAPIResourceCache.prototype.fromJson = fromJson;\n    AngularJsonAPIResourceCache.prototype.toJson = toJson;\n    AngularJsonAPIResourceCache.prototype.clear = clear;\n\n    AngularJsonAPIResourceCache.prototype.remove = remove;\n    AngularJsonAPIResourceCache.prototype.revertRemove = revertRemove;\n    AngularJsonAPIResourceCache.prototype.clearRemoved = clearRemoved;\n\n    return {\n      create: AngularJsonAPIResourceCacheFactory\n    };\n\n    function AngularJsonAPIResourceCacheFactory(resource) {\n      return new AngularJsonAPIResourceCache(resource);\n    }\n\n    /**\n     * Constructor\n     */\n    function AngularJsonAPIResourceCache(resource) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.data = {};\n      _this.removed = {};\n      _this.size = 0;\n\n      _this.indexIds = undefined;\n    }\n\n    /**\n     * Add new model or update existing with data\n     * @param {object} validatedData Data that are used to update or create an object, has to be valid\n     * @return {AngularJsonAPIModel} Created model\n     */\n    function addOrUpdate(validatedData, config, updatedAt) {\n      var _this = this;\n      var id = validatedData.id;\n\n      if (id === undefined) {\n        $log.error('Can\\'t add data without id!', validatedData);\n        return;\n      }\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(validatedData, config, updatedAt);\n        _this.size += 1;\n      } else {\n        _this.data[id].update(validatedData, !config.new, config.initialization);\n      }\n\n      return _this.data[id];\n    }\n\n\n    /**\n     * Recreate object structure from json data\n     * @param  {json} json Json data\n     * @return {undefined}\n     */\n    function fromJson(json) {\n      var _this = this;\n      var collection = angular.fromJson(json);\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: true\n      };\n\n      if (angular.isObject(collection) && collection.data !== undefined) {\n        _this.updatedAt = collection.updatedAt;\n        _this.indexIds = collection.indexIds;\n\n        angular.forEach(collection.data, function(objectData) {\n          var data = objectData.data;\n          _this.addOrUpdate(data, config, objectData.updatedAt);\n        });\n      }\n    }\n\n    /**\n     * Encodes memory into json format\n     * @return {json} Json encoded memory\n     */\n    function toJson() {\n      var _this = this;\n      var json = {\n        data: [],\n        updatedAt: _this.updatedAt,\n        indexIds: _this.indexIds\n      };\n\n      angular.forEach(_this.data, function(object) {\n        if (object.hasErrors() === false) {\n          json.data.push(object.toJson());\n        }\n      });\n\n      return angular.toJson(json);\n    }\n\n    /**\n     * Clear memory\n     * @return {undefined}\n     */\n    function clear() {\n      var _this = this;\n\n      _this.indexIds = undefined;\n      _this.data = {};\n      _this.removed = {};\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function get(id) {\n      var _this = this;\n\n      var data = {\n        id: id,\n        type: _this.resource.schema.type\n      };\n\n      var config = {\n        new: false,\n        synchronized: false,\n        stable: false,\n        pristine: true\n      };\n\n      if (_this.data[id] === undefined) {\n        _this.data[id] = _this.resource.modelFactory(data, config);\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Low level get used internally, does not run any synchronization, used for index requests\n     * @param  {objec} params\n     * @return {AngularJsonAPIModel} Model associated with id\n     */\n    function index(params) {\n      var _this = this;\n      params = params || {};\n\n      if (_this.indexIds === undefined) {\n        return _this.indexIds;\n      }\n\n      return _this.indexIds.map(_this.get.bind(_this)).filter(filter);\n\n      function filter(argument) {\n        var filterParams  = params.filter;\n        var valid = true;\n\n        angular.forEach(filterParams, function(constraint) {\n          valid = valid && argument.data.attributes[constraint.key] === constraint.value;\n        });\n\n        return valid;\n      }\n    }\n\n    /**\n     * Cache ids of objects returned by index request\n     * @param {ids array or AngularJsonAPIModel array} array Objects or ids to be cached\n     */\n    function setIndexIds(array) {\n      var _this = this;\n\n      _this.indexIds = [];\n\n      angular.forEach(array, function(element) {\n        if (angular.isString(element) && _this.resource.schema.id.validate(element)) {\n          _this.indexIds.push(element);\n        } else if (angular.isObject(element) && _this.resource.schema.id.validate(element.data.id)) {\n          _this.indexIds.push(element.data.id);\n        }\n      });\n    }\n\n    /**\n     * Remove object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function remove(id) {\n      var _this = this;\n\n      if (_this.data[id] !== undefined) {\n        _this.removed[id] = _this.data[id];\n        delete _this.data[id];\n        _this.size -= 1;\n      }\n\n      return _this.removed[id];\n    }\n\n    /**\n     * Revert removal of an object with given id from cache\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel / undefined}    Removed object, undefined if\n     * object does not exist\n     */\n    function revertRemove(id) {\n      var _this = this;\n\n      if (_this.removed[id] !== undefined) {\n        _this.data[id] = _this.removed[id];\n        delete _this.removed[id];\n        _this.size += 1;\n      }\n\n      return _this.data[id];\n    }\n\n    /**\n     * Clear removed object from memory\n     * @param  {uuid} id\n     * @return {undefined}\n     */\n    function clearRemoved(id) {\n      var _this = this;\n\n      delete _this.removed[id];\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .service('AngularJsonAPIModelLinkerService', AngularJsonAPIModelLinkerService);\n\n  function AngularJsonAPIModelLinkerService($log) {\n    var _this = this;\n\n    _this.toLinkData = toLinkData;\n\n    _this.link = link;\n    _this.unlink = unlink;\n\n    return this;\n\n    /**\n     * Extracts data needed for relationship linking from object\n     * @param  {AngularJsonAPIModel} object Object\n     * @return {json}        Link data\n     */\n    function toLinkData(object) {\n      if (object === null) {\n        return null;\n      }\n\n      return {type: object.data.type, id: object.data.id};\n    }\n\n    /**\n     * Add target to object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be linked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function link(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t add link to non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (target === undefined) {\n        $log.error('Can\\'t link non existing object', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema === undefined) {\n        $log.error('Can\\'t add link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (target !== null && schema.polymorphic === false && schema.model !== target.data.type) {\n        $log.error('This relation is not polymorphic, expected: ' + schema.model + ' instead of ' + target.data.type);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (schema.type === 'hasMany') {\n        if (oneWay === true) {\n          __addHasMany(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasMany(object, key, target, form);\n        }\n      } else if (schema.type === 'hasOne') {\n        if (oneWay === true) {\n          __addHasOne(object, key, target, form);\n          return [];\n        } else {\n          return __processAddHasOne(object, key, target, form);\n        }\n      }\n    }\n\n    /**\n     * Remove target from object relationships and data.relationships\n     * @param {AngularJsonAPIModel} object     Object to be modified\n     * @param {string} key        Relationship name\n     * @param {AngularJsonAPIModel} target     Object to be unlinked\n     * @param {AngularJsonAPISchema} schema     Relationship schema\n     */\n    function unlink(object, key, target, oneWay, form) {\n      var schema;\n      form = form === undefined ? false : form;\n\n      if (object === undefined) {\n        $log.error('Can\\'t remove link from non existing object', object, key, target);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        return [];\n      }\n\n      schema = object.schema.relationships[key];\n\n      if (schema === undefined) {\n        $log.error('Can\\'t remove link not present in schema:', object, key, target, schema);\n        $log.error('Object:', object.data.type, object);\n        $log.error('Target:', target.data.type, target);\n        $log.error('Key:', key);\n        $log.error('Schema:', schema);\n        return [];\n      }\n\n      if (oneWay === true) {\n        __removeHasMany(object, key, target, form);\n        return [];\n      } else {\n        return __processRemove(object, key, target, form);\n      }\n    }\n\n    /////////////\n    // Private //\n    /////////////\n\n    function __processAddHasMany(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var reflectionSchema;\n\n      if (reflectionKey === false) {\n        __addHasMany(object, key, target, form);\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        return __swapResults(\n          __wrapResults(object, key, target),\n          __wrapResults(target, reflectionKey, object),\n          __processAddHasOne(target, reflectionKey, object, form)\n        );\n      } else if (reflectionSchema.type === 'hasMany') {\n        __addHasMany(object, key, target, form);\n        __addHasMany(target, reflectionKey, object, form);\n        return [__wrapResults(target, reflectionKey, object)];\n      }\n    }\n\n    function __processAddHasOne(object, key, target, form) {\n      var reflectionKey = object.schema.relationships[key].reflection;\n      var oldReflection = object.relationships[key];\n      var reflectionSchema;\n      var oldReflectionSchema;\n      var result = [];\n\n      __addHasOne(object, key, target, form);\n\n      if (oldReflection !== undefined && oldReflection !== null) {\n        oldReflectionSchema = oldReflection.schema.relationships[reflectionKey];\n\n        if (oldReflectionSchema.type === 'hasOne') {\n          __removeHasOne(oldReflection, reflectionKey, object, form);\n        } else if (oldReflectionSchema.type === 'hasMany') {\n          __removeHasMany(oldReflection, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(oldReflection, reflectionKey, object));\n      }\n\n      if (target !== undefined && target !== null && reflectionKey !== false) {\n        reflectionSchema = target.schema.relationships[reflectionKey];\n\n        if (reflectionSchema.type === 'hasOne') {\n          __addHasOne(target, reflectionKey, object, form);\n        } else if (reflectionSchema.type === 'hasMany') {\n          __addHasMany(target, reflectionKey, object, form);\n        }\n\n        result.push(__wrapResults(target, reflectionKey, object));\n      }\n\n      return result;\n    }\n\n    function __processRemove(object, key, target, form) {\n      var schema = object.schema.relationships[key];\n      var reflectionKey = schema.reflection;\n      var reflectionSchema;\n\n      if (schema.type === 'hasMany') {\n        __removeHasMany(object, key, target, form);\n      } else if (schema.type === 'hasOne') {\n        __removeHasOne(object, key, target, form);\n      }\n\n      if (reflectionKey === false) {\n        return [];\n      }\n\n      reflectionSchema = target.schema.relationships[reflectionKey];\n\n      if (reflectionSchema.type === 'hasOne') {\n        __removeHasOne(target, reflectionKey, object, form);\n      } else if (reflectionSchema.type === 'hasMany') {\n        __removeHasMany(target, reflectionKey, object, form);\n      }\n\n      return [__wrapResults(target, reflectionKey, object)];\n    }\n\n    function __addHasOne(object, key, target, form) {\n      $log.debug('addHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      object.relationships[key] = target;\n      object.data.relationships[key].data = toLinkData(target);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __addHasMany(object, key, target, form) {\n      $log.debug('addHasMany', object, key, target);\n\n      var linkData = toLinkData(target);\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (angular.isArray(object.relationships[key]) && object.relationships[key].indexOf(target) > -1) {\n        return false;\n      }\n\n      object.relationships[key] = object.relationships[key] || [];\n      object.data.relationships[key].data = object.data.relationships[key].data || [];\n\n      object.relationships[key].push(target);\n      object.data.relationships[key].data.push(linkData);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasOne(object, key, target, form) {\n      $log.debug('removeHasOne', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (target !== undefined && object.relationships[key] !== target) {\n        return false;\n      }\n\n      object.relationships[key] = null;\n      object.data.relationships[key].data = undefined;\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __removeHasMany(object, key, target, form) {\n      $log.debug('removeHasMany', object, key, target);\n\n      if (form === true) {\n        object = object.form;\n      }\n\n      if (object.relationships[key] === undefined) {\n        return;\n      }\n\n      if (target === undefined) {\n        object.relationships[key] = [];\n        object.data.relationships[key].data = [];\n        if (form === false) {\n          object.reset(true);\n        }\n\n        return true;\n      }\n\n      var index = object.relationships[key].indexOf(target);\n\n      if (index === -1) {\n        return false;\n      }\n\n      object.relationships[key].splice(index, 1);\n      object.data.relationships[key].data.splice(index, 1);\n\n      if (form === false) {\n        object.reset(true);\n      }\n\n      return true;\n    }\n\n    function __wrapResults(object, key, target) {\n      return {\n        object: object,\n        key: key,\n        target: target\n      };\n    }\n\n    function __swapResults(value, newValue, array) {\n      var index = -1;\n      angular.forEach(array, function(item, i) {\n        if (item.object === value.object && item.key === value.key && item.target === value.target) {\n          index = i;\n        }\n      });\n\n      if (index > -1) {\n        array[index] = newValue;\n      } else {\n        array.push(newValue);\n      }\n\n      return array;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelForm', AngularJsonAPIModelFormWrapper);\n\n  function AngularJsonAPIModelFormWrapper(\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelLinkerService,\n    validateJS,\n    $q\n  ) {\n\n    AngularJsonAPIModelForm.prototype.save = save;\n    AngularJsonAPIModelForm.prototype.reset = reset;\n    AngularJsonAPIModelForm.prototype.validate = validate;\n\n    AngularJsonAPIModelForm.prototype.link = link;\n    AngularJsonAPIModelForm.prototype.unlink = unlink;\n\n    AngularJsonAPIModelForm.prototype.toJson = toJson;\n\n    return {\n      create: AngularJsonAPIModelFormFactory\n    };\n\n    function AngularJsonAPIModelFormFactory(parent) {\n      return new AngularJsonAPIModelForm(parent);\n    }\n\n    function AngularJsonAPIModelForm(parent) {\n      var _this = this;\n\n      _this.data = {\n        id: parent.data.id,\n        type: parent.data.type,\n        attributes: {},\n        relationships: {}\n      };\n\n      _this.relationships = {};\n      _this.parent = parent;\n      _this.schema = parent.schema;\n      _this.reset();\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = angular.copy(_this.data);\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data\n      };\n    }\n\n    /**\n     * Saves form, shortcut to parent.save()\n     * @return {promise} Promise associated with synchronization\n     */\n    function save() {\n      var _this = this;\n\n      return _this.parent.save();\n    }\n\n    /**\n     * Resets form to state of a parent\n     * @return {undefined}\n     */\n    function reset(auto) {\n      var _this = this;\n\n      angular.forEach(_this.schema.relationships, function(data, key) {\n        _this.data.relationships[key] = angular.copy(_this.parent.data.relationships[key]) || {};\n        if (angular.isArray(_this.relationships[key])) {\n          _this.relationships[key] = _this.parent.relationships[key].slice();\n        } else {\n          _this.relationships[key] = _this.parent.relationships[key];\n        }\n      });\n\n      if (auto === true && _this.parent.synchronized === true) {\n        return;\n      }\n\n      angular.forEach(_this.schema.attributes, function(validator, key) {\n        _this.data.attributes[key] = angular.copy(_this.parent.data.attributes[key]);\n      });\n\n      _this.parent.errors.validation.clear();\n    }\n\n    /**\n     * Validates form\n     * @return {promise} Promise rejected to errors object indexed by keys. If the\n     * key param i stated it only validates an attribute, else all attributes.\n     */\n    function validate(key) {\n      var _this = this;\n      var attributesWrapper;\n      var constraintsWrapper;\n      var deferred = $q.defer();\n\n      if (key === undefined) {\n        attributesWrapper = _this.data.attributes;\n        constraintsWrapper = _this.schema.attributes;\n      } else {\n        attributesWrapper = {};\n        constraintsWrapper = {};\n\n        attributesWrapper[key] = _this.data.attributes[key];\n        constraintsWrapper[key] = _this.schema.attributes[key];\n      }\n\n      validateJS.async(\n        attributesWrapper,\n        constraintsWrapper\n      ).then(resolve, reject);\n\n      function resolve() {\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        deferred.resolve();\n      }\n\n      function reject(errorsMap) {\n        _this.parent.error = true;\n        if (key === undefined) {\n          _this.parent.errors.validation.clear();\n        } else {\n          _this.parent.errors.validation.clear(key);\n        }\n\n        angular.forEach(errorsMap, function(errors, attribute) {\n          angular.forEach(errors, function(error) {\n            _this.parent.errors.validation.add(attribute, AngularJsonAPIModelValidationError.create(error, attribute));\n          });\n        });\n\n        deferred.reject(_this.parent.errors.validation);\n      }\n\n      return deferred.promise;\n    }\n\n    /**\n     * Adds link to a form without synchronization\n     * @param {string} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function link(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.link(_this.parent, key, target, oneWay, true));\n    }\n\n    /**\n     * Removes link from form without synchronization\n     * @param  {[type]} key    Relationship name\n     * @param {AngularJsonAPIModel} target Object to be linked\n     * @return {Boolean}        Status\n     */\n    function unlink(key, target, oneWay) {\n      var _this = this;\n      oneWay = oneWay === undefined ? false : true;\n\n      return $q.resolve(AngularJsonAPIModelLinkerService.unlink(_this.parent, key, target, oneWay, true));\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIAbstractModel', AngularJsonAPIAbstractModelWrapper);\n\n  function AngularJsonAPIAbstractModelWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelValidationError,\n    AngularJsonAPIModelErrorsManager,\n    AngularJsonAPIModelLinkerService,\n    AngularJsonAPIModelForm,\n    $rootScope,\n    $injector,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIAbstractModel.prototype.refresh = refresh;\n    AngularJsonAPIAbstractModel.prototype.remove = remove;\n    AngularJsonAPIAbstractModel.prototype.reset = reset;\n    AngularJsonAPIAbstractModel.prototype.save = save;\n\n    AngularJsonAPIAbstractModel.prototype.update = update;\n\n    AngularJsonAPIAbstractModel.prototype.link = link;\n    AngularJsonAPIAbstractModel.prototype.unlink = unlink;\n    AngularJsonAPIAbstractModel.prototype.unlinkAll = unlinkAll;\n\n    AngularJsonAPIAbstractModel.prototype.toJson = toJson;\n\n    AngularJsonAPIAbstractModel.prototype.hasErrors = hasErrors;\n\n    return AngularJsonAPIAbstractModel;\n\n    /**\n     * Constructor\n     * @param {json}  data      Validated data used to create an object\n     * @param {object} config   Is object new (for form)\n     */\n    function AngularJsonAPIAbstractModel(data, config, updatedAt) {\n      var _this = this;\n\n      data.relationships = data.relationships || {};\n\n      /**\n       * Is not a new record\n       * @type {Boolean}\n       */\n      _this.new = config.new === undefined ? false : config.new;\n\n      /**\n       * Is present on the server\n       * @type {Boolean}\n       */\n      _this.stable = config.stable === undefined ? true : config.stable;\n\n      /**\n       * Has been synchronized with the server\n       * @type {Boolean}\n       */\n      _this.synchronized = config.synchronized === undefined ? true : config.synchronized;\n\n      /**\n       * Has just been created by request and may not exist on the server\n       * @type {Boolean}\n       */\n      _this.pristine = config.pristine === undefined ? true : config.pristine;\n\n      _this.removed = false;\n      _this.loading = false;\n      _this.saving = false;\n      _this.updatedAt = _this.synchronized === true ? Date.now() : updatedAt;\n\n      _this.loadingCount = 0;\n      _this.savingCount = 0;\n\n      _this.data = {\n        relationships: {},\n        attributes: {}\n      };\n      _this.relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(schema, key) {\n        _this.relationships[key] = undefined;\n      });\n\n      _this.errors = {\n        validation: AngularJsonAPIModelErrorsManager.create(\n          'Validation',\n          'Errors of attributes validation',\n          AngularJsonAPIModelValidationError\n        ),\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.promise = $q.resolve(_this);\n\n      __setData(_this, data);\n\n      _this.form = AngularJsonAPIModelForm.create(_this);\n    }\n\n    /**\n     * Saves model's form\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function save() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: _this.new === true ? 'add' : 'update',\n        object: _this\n      };\n\n      _this.form.validate().then(\n        synchronize,\n        deferred.reject\n      ).finally(__decrementSavingCounter.bind(_this, undefined));\n\n      __incrementSavingCounter(_this);\n\n      return deferred.promise;\n\n      function synchronize() {\n        _this.synchronize(config).then(resolve, reject, notify);\n      }\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:' + config.action, 'resolved', _this, response);\n        _this.update(response.data.data);\n\n        if (_this.new === true) {\n          _this.resource.cache.indexIds = _this.resource.cache.indexIds || [];\n          _this.resource.cache.indexIds.push(_this.data.id);\n        }\n\n        _this.synchronized = true;\n        _this.new = false;\n        _this.pristine = false;\n        _this.stable = true;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.resolve(response.data.meta);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:save', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Reset object form\n     * @return {undefined}\n     */\n    function reset() {\n      var _this = this;\n\n      if (_this.form !== undefined) {\n        _this.form.reset();\n      }\n    }\n\n    /**\n     * Synchronize object with remote\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function refresh(params) {\n      var $jsonapi = $injector.get('$jsonapi');\n      var deferred = $q.defer();\n      var _this = this;\n      params = params === undefined ? _this.schema.params.get : params;\n\n      var config = {\n        action: 'refresh',\n        object: _this,\n        params: params\n      };\n\n      if (_this.new === true) {\n        var error = AngularJsonAPIModelSourceError.create('Can\\'t refresh new object', null, 0, 'refresh');\n        _this.errors.synchronization.add('refresh', error);\n        deferred.reject(error);\n      } else {\n        __incrementLoadingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        _this.synchronized = true;\n        _this.stable = true;\n        _this.pristine = false;\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'rejected', _this, response);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:refresh', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Encodes object into json\n     * @return {json} Json object\n     */\n    function toJson() {\n      var _this = this;\n      var data = _this.data;\n      var relationships = {};\n\n      angular.forEach(data.relationships, function(value, key) {\n        if (value.data !== undefined) {\n          relationships[key] = value;\n        }\n      });\n\n      data.relationships = relationships;\n\n      return {\n        data: data,\n        updatedAt: _this.updatedAt\n      };\n    }\n\n    /**\n     * Remove object\n     * @return {promise} Promise associated with synchronization that resolves to nothing\n     */\n    function remove() {\n      var _this = this;\n      var deferred = $q.defer();\n\n      var config = {\n        action: 'remove',\n        object: _this\n      };\n\n      _this.resource.cache.remove(_this.data.id);\n\n      if (_this.new === true) {\n        deferred.resolve();\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'resolved', _this, response);\n        _this.removed = true;\n        _this.unlinkAll();\n        _this.resource.cache.clearRemoved(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        deferred.resolve();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'rejected', _this, response);\n        _this.resource.cache.revertRemove(_this.data.id);\n\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:remove', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlink all reflection relationships of the object **without synchronization**\n     * @return {boolean} Result\n     */\n    function unlinkAll(key) {\n      var _this = this;\n      var deferred = $q.defer();\n\n      __incrementLoadingCounter(_this);\n\n      if (key === undefined) {\n        angular.forEach(_this.relationships, removeLink);\n      } else {\n        removeLink(_this.relationships[key], key);\n      }\n\n      __decrementLoadingCounter(_this);\n\n      return deferred.promise;\n\n      function removeLink(linksObj, key) {\n        var schema = _this.schema.relationships[key];\n        var reflectionKey = schema.reflection;\n\n        if (angular.isArray(linksObj)) {\n          angular.forEach(linksObj, removeReflectionLink.bind(undefined, reflectionKey));\n        } else if (angular.isObject(linksObj)) {\n          removeReflectionLink(reflectionKey, linksObj);\n        }\n\n        if (schema.type === 'hasOne') {\n          _this.relationships[key] = null;\n        } else if (schema.type === 'hasMany') {\n          _this.relationships[key] = [];\n        }\n      }\n\n      function removeReflectionLink(reflectionKey, target) {\n        var reflectionSchema = target.schema.relationships[reflectionKey];\n        var config = {\n          action: 'unlinkReflection',\n          object: target,\n          target: _this,\n          key: reflectionKey\n        };\n\n        __incrementLoadingCounter(target);\n        AngularJsonAPIModelLinkerService.unlink(target, reflectionKey, _this, reflectionSchema);\n\n        target.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementLoadingCounter.bind(target, undefined));\n\n        function resolve(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'resolve', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.resolve();\n        }\n\n        function reject(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'rejected', _this, response);\n\n          response.finish();\n          _this.errors.synchronization.concat(response.errors);\n          deferred.reject(_this);\n        }\n\n        function notify(response) {\n          $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlinkReflection', 'notify', _this, response);\n\n          response.finish();\n          deferred.notify(response);\n        }\n      }\n    }\n\n    /**\n     * Links object to relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be linked\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function link(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'link',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link undefined', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t link new object', null, 0, 'link');\n        _this.errors.synchronization.add('link', error);\n        deferred.reject(error);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'linkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].object.data.type + ':object:linkReflection', 'resolved', targets[key], operation);\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:link', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Unlinks object from relationship with the key\n     * @param  {string} key    Relationship name\n     * @param  {AngularJsonAPIModel} target Object to be unlinked if undefined unlinks all\n     * @return {promise}        Promise associated with synchronizations\n     */\n    function unlink(key, target) {\n      var deferred = $q.defer();\n      var _this = this;\n      var error;\n      var config = {\n        action: 'unlink',\n        object: _this,\n        target: target,\n        key: key\n      };\n\n      if (target === undefined) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink undefined', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else if (_this.new === true) {\n        error = AngularJsonAPIModelSourceError.create('Can\\'t unlink new object', null, 0, 'unlink');\n        _this.errors.synchronization.add('unlink', error);\n        deferred.reject(_this);\n      } else {\n        __incrementSavingCounter(_this);\n\n        _this.synchronize(config)\n          .then(resolve, reject, notify)\n          .finally(__decrementSavingCounter.bind(_this, undefined));\n      }\n\n      return deferred.promise;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'resolved', _this, response);\n\n        var targets = AngularJsonAPIModelLinkerService.link(_this, key, target);\n\n        _this.stable = true;\n        _this.pristine = false;\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        $q.allSettled(targets.map(synchronize))\n          .then(resolveReflection, deferred.reject);\n\n        function synchronize(result) {\n          __incrementLoadingCounter(target);\n\n          return target.synchronize({\n            action: 'unlinkReflection',\n            object: result.object,\n            target: result.target,\n            key: result.key\n          }).finally(__decrementLoadingCounter.bind(target, undefined));\n        }\n\n        function resolveReflection(response) {\n          angular.forEach(response, function(operation) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + targets[key].data.type + ':object:unlinkReflection', 'resolved', targets[key], operation);\n              response.value.finish();\n            }\n          });\n\n          deferred.resolve();\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'rejected', _this, response);\n\n        deferred.reject(response.errors);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.data.type + ':object:unlink', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n\n    /**\n     * Sets object state to data\n     * @param  {object} validatedData JsonAPI object with data\n     * @return {bool}               Result\n     */\n    function update(validatedData, auto, initialization) {\n      var _this = this;\n\n      __incrementLoadingCounter(_this);\n\n      __setData(_this, validatedData);\n      _this.reset(auto);\n      _this.synchronized = initialization === true ? false : true;\n      _this.stable = initialization === true ? false : true;\n      _this.updatedAt = Date.now();\n\n      __decrementLoadingCounter(_this);\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /////////////\n    // PRIVATE //\n    /////////////\n\n    /**\n     * Low level set data function, use only with validated data\n     * @param  {AngularJsonAPIModel} object        object to be modified\n     * @param  {object} validatedData Validated data\n     * @return {boolean}               Status\n     */\n    function __setData(object, validatedData) {\n\n      var $jsonapi = $injector.get('$jsonapi');\n      var schema = object.schema;\n\n      object.data.id = validatedData.id;\n      object.data.type = validatedData.type;\n\n      if (object.resource.schema.type !== validatedData.type) {\n        $log.error('Different type then resource', object.resource.schema.type, validatedData);\n        return false;\n      }\n\n      if (!object.schema.id.validate(object.data.id)) {\n        $log.error('Invalid id');\n        return false;\n      }\n\n      object.data.links = validatedData.links;\n      validatedData.attributes = validatedData.attributes || {};\n      validatedData.relationships = validatedData.relationships || {};\n\n      angular.forEach(schema.attributes, setAttributes);\n      angular.forEach(schema.relationships, setRelationships);\n\n      return true;\n\n      function setAttributes(validators, key) {\n        object.data.attributes[key] = validatedData.attributes[key];\n      }\n\n      function setRelationships(schema, key) {\n        var relationshipData = validatedData.relationships[key];\n\n        if (relationshipData === undefined) {\n          if (object.data.relationships[key] === undefined) {\n            object.data.relationships[key] = {data: undefined};\n          }\n\n          return;\n        }\n\n        object.data.relationships[key] = object.data.relationships[key] || {};\n        object.data.relationships[key].links = relationshipData.links;\n\n        if (schema.type === 'hasOne') {\n          linkOne(object, key, relationshipData.data);\n        } else if (schema.type === 'hasMany') {\n          if (angular.isArray(relationshipData.data)) {\n            if (relationshipData.data.length === 0) {\n              object.data.relationships[key].data = [];\n              object.unlinkAll(key);\n            } else {\n              angular.forEach(\n                object.relationships[key],\n                unlinkOne.bind(undefined, object, key, relationshipData.data)\n              );\n              angular.forEach(\n                relationshipData.data,\n                linkOne.bind(undefined, object, key)\n              );\n            }\n          }\n        }\n      }\n\n      function linkOne(object, key, data) {\n        var resource;\n\n        if (data === null) {\n          AngularJsonAPIModelLinkerService.link(object, key, null);\n          return;\n        }\n\n        if (data === undefined) {\n          return;\n        }\n\n        resource = $jsonapi.getResource(data.type);\n\n        if (resource === undefined) {\n          $log.error('Factory not found', data.type, data);\n          return;\n        }\n\n        var target = resource.cache.get(data.id);\n\n        AngularJsonAPIModelLinkerService.link(object, key, target);\n      }\n\n      function unlinkOne(object, key, relationshipData, target) {\n        if (relationshipData.indexOf(target.data.id) > -1) {\n          return;\n        }\n\n        AngularJsonAPIModelLinkerService.unlink(object, key, target);\n      }\n    }\n  }\n\n  /////////////\n  // Private //\n  /////////////\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n\n  function __incrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount += 1;\n    object.saving = true;\n  }\n\n  function __decrementSavingCounter(object) {\n    object = object === undefined ? this : object;\n    object.savingCount -= 1;\n    object.saving = object.savingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelValidationError', AngularJsonAPIModelValidationErrorWrapper);\n\n  function AngularJsonAPIModelValidationErrorWrapper() {\n    ValidationError.prototype = Object.create(Error.prototype);\n    ValidationError.prototype.constructor = ValidationError;\n    ValidationError.prototype.name = 'ValidationError';\n\n    return {\n      create: ValidationErrorFactory\n    };\n\n    function ValidationErrorFactory(message, attribute) {\n      return new ValidationError(message, attribute);\n    }\n\n    function ValidationError(message, attribute) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        attribute: attribute\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelSourceError', AngularJsonAPIModelSourceErrorWrapper);\n\n  function AngularJsonAPIModelSourceErrorWrapper() {\n    SourceError.prototype = Object.create(Error.prototype);\n    SourceError.prototype.constructor = SourceError;\n    SourceError.prototype.name = 'SourceError';\n\n    return {\n      create: SourceErrorFactory\n    };\n\n    function SourceErrorFactory(message, source, code, action) {\n      return new SourceError(message, source, code, action);\n    }\n\n    function SourceError(message, source, code, action) {\n      var _this = this;\n\n      _this.message = message;\n      _this.context = {\n        source: source,\n        code: code,\n        action: action\n      };\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModelErrorsManager', AngularJsonAPIModelErrorsManagerWrapper);\n\n  function AngularJsonAPIModelErrorsManagerWrapper() {\n    ErrorsManager.prototype.constructor = ErrorsManager;\n    ErrorsManager.prototype.concat = concat;\n    ErrorsManager.prototype.clear = clear;\n    ErrorsManager.prototype.add = add;\n    ErrorsManager.prototype.hasErrors = hasErrors;\n\n    return {\n      create: ErrorsManagerFactory\n    };\n\n    function ErrorsManagerFactory(name, description, ErrorConstructor, defaultFilter) {\n      return new ErrorsManager(name, description, ErrorConstructor, defaultFilter);\n    }\n\n    function ErrorsManager(name, description, ErrorConstructor, defaultFilter) {\n      var _this = this;\n      _this.name = name;\n      _this.description = description;\n\n      _this.ErrorConstructor = ErrorConstructor;\n      _this.errors = {};\n      _this.defaultFilter = defaultFilter || function() { return true; };\n    }\n\n    function clear(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        angular.forEach(_this.errors, function(obj, key) {\n          _this.errors[key] = [];\n        });\n      } else {\n        _this.errors[key] = [];\n      }\n    }\n\n    function add(key, error) {\n      var _this = this;\n\n      _this.errors[key] = _this.errors[key] || [];\n      _this.errors[key].push(error);\n    }\n\n    function concat(errors) {\n      var _this = this;\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key] = [];\n      });\n\n      angular.forEach(errors, function(error) {\n        _this.errors[error.key].push(error.object);\n      });\n\n    }\n\n    function hasErrors(key) {\n      var _this = this;\n\n      if (key === undefined) {\n        var answer = false;\n\n        angular.forEach(_this.errors, function(error) {\n          answer = answer || error.length > 0;\n        });\n\n        return answer;\n      } else {\n        return _this.errors[key] !== undefined && _this.errors[key].length > 0;\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('namedFunction', namedFunction);\n\n  function namedFunction(name, fn) {\n    return new Function('fn',\n      'return function ' + name + '(){ return fn.apply(this,arguments)}'\n    )(fn);\n  }\n})();\n\n// from https://www.sitepen.com/blog/2012/10/19/lazy-property-access/\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('lazyProperty', function(target, propertyName, callback) {\n      var result;\n      var done;\n      Object.defineProperty(target, propertyName, {\n        get: function() { // Define the getter\n          if (!done) {\n            // We cache the result and only compute once.\n            done = true;\n            result = callback.call(target);\n          }\n\n          return result;\n        },\n\n        // Keep it enumerable and configurable, certainly not necessary.\n        enumerable: true,\n        configurable: true\n      });\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n    .constant('toKebabCase', function(str) {\n      return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(provide);\n\n  function provide($provide) {\n    $provide.decorator('$q', decorator);\n  }\n\n  function decorator($delegate) {\n    var $q = $delegate;\n\n    $q.allSettled = $q.allSettled || allSettled;\n\n    function allSettled(promises, resolvedCallback, rejectedCallback) {\n      // Implementation of allSettled function from Kris Kowal's Q:\n      // https://github.com/kriskowal/q/wiki/API-Reference#promiseallsettled\n      // by Michael Kropat from http://stackoverflow.com/a/27114615/1400432 slightly modified\n\n      var wrapped = angular.isArray(promises) ? [] : {};\n\n      angular.forEach(promises, function(promise, key) {\n        if (!wrapped.hasOwnProperty(key)) {\n          wrapped[key] = wrap(promise);\n        }\n      });\n\n      return $q.all(wrapped);\n\n      function wrap(promise) {\n        return $q.resolve(promise)\n          .then(function(value) {\n            if (angular.isFunction(resolvedCallback)) {\n              resolvedCallback(value);\n            }\n\n            return { success: true, value: value };\n          },\n\n          function(reason) {\n            if (angular.isFunction(rejectedCallback)) {\n              rejectedCallback(reason);\n            }\n\n            return { success: false, reason: reason };\n          });\n      }\n    }\n\n    return $q;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerSimple', AngularJsonAPISynchronizerSimpleWrapper);\n\n  function AngularJsonAPISynchronizerSimpleWrapper(AngularJsonAPISynchronizerPrototype, $q, $log) {\n\n    AngularJsonAPISynchronizerSimple.prototype = Object.create(AngularJsonAPISynchronizerPrototype.prototype);\n    AngularJsonAPISynchronizerSimple.prototype.constructor = AngularJsonAPISynchronizerSimple;\n\n    AngularJsonAPISynchronizerSimple.prototype.synchronize = synchronize;\n\n    return {\n      create: AngularJsonAPISynchronizerSimpleFactory\n    };\n\n    function AngularJsonAPISynchronizerSimpleFactory(sources) {\n      return new AngularJsonAPISynchronizerSimple(sources);\n    }\n\n    function AngularJsonAPISynchronizerSimple(sources) {\n      var _this = this;\n\n      _this.state = {};\n\n      AngularJsonAPISynchronizerPrototype.call(_this, sources);\n\n      angular.forEach(sources, function(source) {\n        source.synchronizer = _this;\n      });\n    }\n\n    function synchronize(config) {\n      var _this = this;\n      var promises = [];\n      var deferred = $q.defer();\n      var action = config.action;\n\n      AngularJsonAPISynchronizerPrototype.prototype.synchronize.call(_this, config);\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beginHooks[action], function(hook) {\n          deferred.notify({step: 'begin', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.beforeHooks[action], function(hook) {\n          deferred.notify({step: 'before', data: hook.call(_this, config)});\n        });\n      });\n\n      angular.forEach(_this.sources, function(source) {\n        angular.forEach(source.synchronizationHooks[action], function(hook) {\n          promises.push(hook.call(_this, config));\n        });\n      });\n\n      $q.allSettled(promises, resolvedCallback, rejectedCallback).then(resolved, rejected);\n\n      function resolvedCallback(value) {\n        deferred.notify({step: 'synchronization', data: value});\n      }\n\n      function rejectedCallback(reason) {\n        deferred.notify({step: 'synchronization', errors: reason});\n      }\n\n      function resolved(results) {\n        _this.state[action] = _this.state[action] || {};\n        _this.state[action].success = true;\n\n        angular.forEach(results, function(result) {\n          if (result.success === false) {\n            _this.state[action].success = false;\n          }\n        });\n\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.afterHooks[action], function(hook) {\n            deferred.notify({step: 'after', errors: hook.call(_this, config, results)});\n          });\n        });\n\n        var data;\n        var errors = [];\n\n        angular.forEach(results, function(result) {\n          if (result.success === true) {\n            data = result.value;\n          } else {\n            errors.push({\n              key: action,\n              object: result.reason\n            });\n          }\n        });\n\n        if (errors.length > 0) {\n          deferred.reject({data: data || {}, finish: finish, errors: errors});\n        } else {\n          deferred.resolve({data: data || {}, finish: finish, errors: errors});\n        }\n      }\n\n      function finish() {\n        angular.forEach(_this.sources, function(source) {\n          angular.forEach(source.finishHooks[action], function(hook) {\n            deferred.notify({step: 'finish', errors: hook.call(_this, config)});\n          });\n        });\n      }\n\n      function rejected(errors) {\n        $log.error('All settled rejected! Something went wrong');\n\n        deferred.reject({finish: angular.noop, errors: errors});\n      }\n\n      return deferred.promise;\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISynchronizerPrototype', AngularJsonAPISynchronizerPrototypeWrapper);\n\n  function AngularJsonAPISynchronizerPrototypeWrapper($log) {\n\n    AngularJsonAPISynchronizerPrototype.prototype.synchronize = synchronize;\n\n    return AngularJsonAPISynchronizerPrototype;\n\n    function AngularJsonAPISynchronizerPrototype(sources) {\n      var _this = this;\n\n      _this.sources = sources;\n    }\n\n    function synchronize(config) {\n      var _this = this;\n\n      $log.debug('Synchro Collection', _this.resource.schema.type, config);\n\n      if (config.action === undefined) {\n        $log.error('Can\\'t synchronize undefined action', config);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISourcePrototype', AngularJsonAPISourcePrototypeWrapper);\n\n  function AngularJsonAPISourcePrototypeWrapper() {\n    AngularJsonAPISourcePrototype.prototype.before = beforeSynchro;\n    AngularJsonAPISourcePrototype.prototype.after = afterSynchro;\n    AngularJsonAPISourcePrototype.prototype.begin = begin;\n    AngularJsonAPISourcePrototype.prototype.finish = finish;\n    AngularJsonAPISourcePrototype.prototype.synchronization = synchronization;\n\n    return AngularJsonAPISourcePrototype;\n\n    function AngularJsonAPISourcePrototype(name) {\n      var _this = this;\n      var allHooks = [\n        'add',\n        'init',\n        'get',\n        'all',\n        'clearCache',\n        'remove',\n        'unlink',\n        'unlinkReflection',\n        'link',\n        'linkReflection',\n        'update',\n        'refresh',\n        'include'\n      ];\n\n      _this.name = name;\n      _this.state = {};\n\n      _this.beginHooks = {};\n      _this.beforeHooks = {};\n      _this.synchronizationHooks = {};\n      _this.afterHooks = {};\n      _this.finishHooks = {};\n\n      _this.options = {};\n\n      angular.forEach(allHooks, function(hookName) {\n        _this.beginHooks[hookName] = [];\n        _this.beforeHooks[hookName] = [];\n        _this.synchronizationHooks[hookName] = [];\n        _this.afterHooks[hookName] = [];\n        _this.finishHooks[hookName] = [];\n        _this.state[hookName] = {\n          loading: false,\n          success: true\n        };\n      });\n    }\n\n    function begin(action, callback) {\n      var _this = this;\n\n      _this.beginHooks[action].push(callback);\n    }\n\n    function finish(action, callback) {\n      var _this = this;\n\n      _this.finishHooks[action].push(callback);\n    }\n\n    function beforeSynchro(action, callback) {\n      var _this = this;\n\n      _this.beforeHooks[action].push(callback);\n    }\n\n    function afterSynchro(action, callback) {\n      var _this = this;\n\n      _this.afterHooks[action].push(callback);\n    }\n\n    function synchronization(action, callback) {\n      var _this = this;\n\n      _this.synchronizationHooks[action].push(callback);\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchema', AngularJsonAPISchemaWrapper);\n\n  function AngularJsonAPISchemaWrapper(\n    $log,\n    pluralize,\n    uuid4,\n    AngularJsonAPISchemaLink\n  ) {\n\n    return {\n      create: AngularJsonAPISchemaFactory\n    };\n\n    function AngularJsonAPISchemaFactory(schema) {\n      return new AngularJsonAPISchema(schema);\n    }\n\n    function AngularJsonAPISchema(schema) {\n      var _this = this;\n      var include = schema.include || {};\n      schema.include = include;\n      include.get = schema.include.get || [];\n      include.all = schema.include.all || [];\n\n      _this.params = {\n        get: {},\n        all: {}\n      };\n\n      if (schema.id === 'uuid4') {\n        schema.id = uuid4;\n      } else if (schema.id === 'int') {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.isNumber\n        };\n      } else if (angular.isObject(schema.id)) {\n        if (!angular.isFunction(schema.id.generate)) {\n          schema.id.generate = angular.noop;\n        }\n      } else {\n        schema.id = {\n          generate: angular.noop,\n          validate: angular.identity.bind(null, true)\n        };\n      }\n\n      angular.forEach(schema.relationships, function(linkSchema, linkName) {\n        var linkSchemaObj = AngularJsonAPISchemaLink.create(linkSchema, linkName, schema.type);\n        schema.relationships[linkName] = linkSchemaObj;\n        if (linkSchemaObj.included === true) {\n          include.get.push(linkName);\n          if (linkSchemaObj.type === 'hasOne') {\n            include.all.push(linkName);\n          }\n        }\n      });\n\n      angular.extend(_this, schema);\n\n      if (include.get.length > 0) {\n        _this.params.get.include = include.get;\n      }\n\n      if (include.all.length > 0) {\n        _this.params.all.include = include.all;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPISchemaLink', AngularJsonAPILinkSchrapperLink);\n\n  function AngularJsonAPILinkSchrapperLink($log, pluralize) {\n\n    return {\n      create: AngularJsonAPISchemaLinkFactory\n    };\n\n    function AngularJsonAPISchemaLinkFactory(linkSchema, linkName, type) {\n      return new AngularJsonAPISchemaLink(linkSchema, linkName, type);\n    }\n\n    function AngularJsonAPISchemaLink(linkSchema, linkName, type) {\n      var _this = this;\n\n      if (angular.isString(linkSchema)) {\n        _this.model = pluralize.plural(linkName);\n        _this.type = linkSchema;\n        _this.polymorphic = false;\n        _this.reflection = type;\n      } else {\n        if (linkSchema.type === undefined) {\n          $log.error('Schema of link without a type: ', linkSchema, linkName);\n        }\n\n        if (linkSchema.type !== 'hasMany' && linkSchema.type !== 'hasOne') {\n          $log.error('Schema of link with wrong type: ', linkSchema.type, 'available: hasOne, hasMany');\n        }\n\n        _this.model = linkSchema.model || pluralize.plural(linkName);\n        _this.type = linkSchema.type;\n        _this.polymorphic = linkSchema.polymorphic || false;\n\n        if (linkSchema.reflection === undefined) {\n          _this.reflection = _this.type === 'hasMany' ? pluralize.singular(type) : type;\n        } else {\n          _this.reflection = linkSchema.reflection;\n        }\n\n        _this.included = linkSchema.included || false;\n      }\n    }\n\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIResource', AngularJsonAPIResourceWrapper);\n\n  function AngularJsonAPIResourceWrapper(\n    AngularJsonAPIModel,\n    AngularJsonAPISchema,\n    AngularJsonAPIResourceCache,\n    AngularJsonAPICollection,\n    $rootScope,\n    $log,\n    $q\n  ) {\n    AngularJsonAPIResource.prototype.get = get;\n    AngularJsonAPIResource.prototype.all = all;\n    AngularJsonAPIResource.prototype.remove = remove;\n    AngularJsonAPIResource.prototype.initialize = initialize;\n\n    AngularJsonAPIResource.prototype.clearCache = clearCache;\n\n    return {\n      create: AngularJsonAPIResourceFactory\n    };\n\n    function AngularJsonAPIResourceFactory(schema, synchronizer) {\n      return new AngularJsonAPIResource(schema, synchronizer);\n    }\n\n    /**\n     * AngularJsonAPIResource constructor\n     * @param {json} schema       Schema object\n     * @param {AngularJsonAPISynchronizer} synchronizer Synchronizer for the resource\n     */\n    function AngularJsonAPIResource(schema, synchronizer) {\n      var _this = this;\n      var config = {\n        action: 'init'\n      };\n\n      _this.schema = AngularJsonAPISchema.create(schema);\n      _this.cache = AngularJsonAPIResourceCache.create(_this);\n\n      _this.synchronizer = synchronizer;\n      _this.synchronizer.resource = _this;\n\n      _this.modelFactory = AngularJsonAPIModel.modelFactory(\n        _this.schema,\n        _this\n      );\n\n      _this.initialized = false;\n      _this.type = _this.schema.type;\n\n      synchronizer.resource = _this;\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'resolved', response);\n        _this.cache.fromJson(response.data);\n        _this.initialized = true;\n\n        response.finish();\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'rejected', response);\n        response.finish();\n        _this.initialized = true;\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:init', 'notify', response);\n      }\n    }\n\n    /**\n     * Get request\n     * @param  {uuid} id\n     * @return {AngularJsonAPIModel} Model associated with id, synchronized\n     */\n    function get(id, params) {\n      var _this = this;\n\n      if (!_this.schema.id.validate(id)) {\n        return $q.reject({errors: [{status: 0, statusText: 'Invalid id'}]});\n      }\n\n      var object = _this.cache.get(id);\n\n      object.promise = object.refresh(params);\n\n      return object;\n    }\n\n    /**\n     * All request\n     * @param  {object} params Object associated with params (for filters/pagination etc.)\n     * @return {AngularJsonAPICollection} Collection of AngularJsonAPIModel, synchronized\n     */\n    function all(params) {\n      var _this = this;\n      params = angular.extend({}, _this.schema.params.all, params);\n\n      var collection = AngularJsonAPICollection.create(\n        _this,\n        params\n      );\n\n      collection.promise = collection.fetch();\n\n      return collection;\n    }\n\n    /**\n     * Remove request\n     * @param  {uuid} id\n     * @return {promise} Promise associated with the synchronization, in case of\n     * fail object is reverted to previous state\n     */\n    function remove(id) {\n      var _this = this;\n      var object = _this.cache.remove(id);\n\n      return object.remove();\n    }\n\n    /**\n     * Initialize new AngularJsonAPIModel\n     * @return {AngularJsonAPIModel} New model\n     */\n    function initialize() {\n      var _this = this;\n      var relationships = {};\n\n      angular.forEach(_this.schema.relationships, function(relationshipSchema, relationshipName) {\n        if (relationshipSchema.type === 'hasOne') {\n          relationships[relationshipName] = {\n            data: null\n          };\n        } else if (relationshipSchema.type === 'hasMany') {\n          relationships[relationshipName] = {\n            data: []\n          };\n        }\n      });\n\n      var data = {\n        type: _this.type,\n        id: _this.schema.id.generate(),\n        attributes: {},\n        relationships: relationships\n      };\n\n      var config = {\n        new: true,\n        synchronized: false,\n        stable: false,\n        pristine: false,\n        initialization: false\n      };\n\n      var object = _this.modelFactory(data, config);\n\n      $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:initialize', 'resolved', object);\n\n      return object;\n    }\n\n    /**\n     * Clears localy saved data\n     * @return {promise} Promise associated with the synchronization resolves to nothing\n     */\n    function clearCache() {\n      var _this = this;\n      var deferred = $q.defer();\n      var config = {\n        action: 'clearCache'\n      };\n\n      _this.cache.clear();\n\n      _this.synchronizer.synchronize(config).then(resolve, reject, notify);\n\n      return deferred;\n\n      function resolve(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.resolve(response);\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'resolved', response);\n        response.finish();\n\n        deferred.reject(response);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':resource:clearCache', 'notify', response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPIModel', AngularJsonAPIModel);\n\n  function AngularJsonAPIModel(\n    AngularJsonAPIAbstractModel,\n    AngularJsonAPISchema,\n    namedFunction,\n    pluralize,\n    $log\n  ) {\n\n    return {\n      modelFactory: createModelFactory\n    };\n\n    function createModelFactory(schemaObj, resource) {\n      var constructorName = pluralize.plural(schemaObj.type, 1);\n\n      var Model = namedFunction(constructorName, function(data, config, updatedAt) {\n        var _this = this;\n\n        if (data.type !== _this.schema.type) {\n          $log.error('Data type other then declared in schema: ', data.type, ' instead of ', _this.schema.type);\n        }\n\n        AngularJsonAPIAbstractModel.call(_this, data, config, updatedAt);\n\n        _this.form.parent = _this;\n      });\n\n      Model.prototype = Object.create(AngularJsonAPIAbstractModel.prototype);\n      Model.prototype.constructor = Model;\n\n      Model.prototype.schema = schemaObj;\n      Model.prototype.resource = resource;\n      Model.prototype.synchronize = resource.synchronizer.synchronize.bind(resource.synchronizer);\n\n      angular.forEach(schemaObj.functions, function(metaFunction, metaFunctionName) {\n        Model.prototype[metaFunctionName] = function() {\n          return metaFunction.apply(this, arguments);\n        };\n      });\n\n      return modelFactory;\n\n      function modelFactory(data, updatedAt, isNew) {\n        return new Model(data, updatedAt, isNew);\n      }\n    }\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .factory('AngularJsonAPICollection', AngularJsonAPICollectionWrapper);\n\n  function AngularJsonAPICollectionWrapper(\n    AngularJsonAPIModelSourceError,\n    AngularJsonAPIModelErrorsManager,\n    $rootScope,\n    $injector,\n    $q\n  ) {\n\n    AngularJsonAPICollection.prototype.fetch = fetch;\n    AngularJsonAPICollection.prototype.refresh = fetch;\n    AngularJsonAPICollection.prototype.get = get;\n    AngularJsonAPICollection.prototype.hasErrors = hasErrors;\n\n    return {\n      create: AngularJsonAPICollectionFactory\n    };\n\n    function AngularJsonAPICollectionFactory(resource, params) {\n      return new AngularJsonAPICollection(resource, params);\n    }\n\n    /**\n     * Constructor\n     * @param {AngularJsonAPIResource} resource Factory associated with the collection\n     * @param {object} params  Params associated with this resource (such as filters)\n     */\n    function AngularJsonAPICollection(resource, params) {\n      var _this = this;\n\n      _this.resource = resource;\n      _this.type = resource.schema.type;\n      _this.params = params || {};\n\n      _this.errors = {\n        synchronization: AngularJsonAPIModelErrorsManager.create(\n          'Source',\n          'Errors of synchronizations',\n          AngularJsonAPIModelSourceError\n        )\n      };\n\n      _this.data = _this.resource.cache.index(_this.params);\n\n      _this.loading = false;\n      _this.loadingCount = 0;\n      _this.synchronized = false;\n      _this.pristine = _this.data === undefined;\n\n      _this.promise = $q.resolve(_this);\n\n      var onObjectRemove = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:remove', remove);\n      var onFactoryClear = $rootScope.$on('angularJsonAPI:' + _this.type + ':resource:clearCache', clear);\n      var onObjectAdd = $rootScope.$on('angularJsonAPI:' + _this.type + ':object:add', add);\n\n      $rootScope.$on('$destroy', clearWatchers);\n\n      function remove(event, status, object) {\n        var index;\n\n        if (status === 'resolved' && _this.data !== undefined) {\n          index = _this.data.indexOf(object);\n          if (index > -1) {\n            _this.data.splice(index, 1);\n            _this.resource.cache.setIndexIds(_this.data);\n          }\n        }\n      }\n\n      function clear() {\n        _this.data = undefined;\n        _this.pristine = true;\n      }\n\n      function add(event, status, object) {\n        if (status === 'resolved') {\n          _this.data = _this.data || [];\n          _this.data.push(object);\n        }\n      }\n\n      function clearWatchers() {\n        onObjectRemove();\n        onFactoryClear();\n        onObjectAdd();\n      }\n    }\n\n    /**\n     * Check if the object has errors\n     * @return {Boolean}\n     */\n    function hasErrors() {\n      var _this = this;\n      var answer = false;\n\n      angular.forEach(_this.errors, function(error) {\n        answer = error.hasErrors() || answer;\n      });\n\n      return answer;\n    }\n\n    /**\n     * Shortcut to this.resource.get\n     * @param  {string} id Id of object]\n     * @return {AngularJsonAPIModel}          Model with id\n     */\n    function get(id, params) {\n      var _this = this;\n\n      return _this.resource.get(id, params);\n    }\n\n    /**\n     * Synchronizes collection with the server\n     * @return {promise} Promise associated with synchronization that resolves to this\n     */\n    function fetch() {\n      var _this = this;\n      var deferred = $q.defer();\n      var $jsonapi = $injector.get('$jsonapi');\n      var config = {\n        action: 'all',\n        params: _this.params\n      };\n\n      __incrementLoadingCounter(_this);\n\n      angular.forEach(_this.data, __incrementLoadingCounter);\n\n      _this.resource.synchronizer.synchronize(config)\n        .then(resolve, reject, notify)\n        .finally(__decrementLoadingCounter.bind(_this, undefined));\n\n      return deferred.promise;\n\n      function resolve(response) {\n        var results = $jsonapi.__proccesResults(response.data);\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'resolved', _this, response);\n        $q.allSettled(results.included.map(synchronizeIncluded)).then(resolveIncluded, deferred.reject);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n\n        _this.data = results.data;\n        _this.links = response.data.links;\n\n        _this.updatedAt = Date.now();\n        _this.synchronized = true;\n\n        _this.resource.cache.setIndexIds(_this.data);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n\n        function synchronizeIncluded(object) {\n          __incrementLoadingCounter(object);\n\n          return object.synchronize({\n            action: 'include',\n            object: object\n          }).finally(__decrementLoadingCounter.bind(object, undefined));\n        }\n\n        function resolveIncluded(includedResponse) {\n          angular.forEach(includedResponse, function(operation, key) {\n            if (operation.success === true) {\n              $rootScope.$emit('angularJsonAPI:' + results.included[key].data.type + ':object:include', 'resolved', results.included[key], operation);\n\n              operation.value.finish();\n            }\n          });\n\n          deferred.resolve(response.data.meta);\n        }\n      }\n\n      function reject(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'rejected', _this, response);\n\n        angular.forEach(_this.data, __decrementLoadingCounter);\n        response.finish();\n        _this.errors.synchronization.concat(response.errors);\n        deferred.reject(_this);\n      }\n\n      function notify(response) {\n        $rootScope.$emit('angularJsonAPI:' + _this.type + ':collection:fetch', 'notify', _this, response);\n\n        deferred.notify(response);\n      }\n    }\n  }\n\n  function __incrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount += 1;\n    object.loading = true;\n  }\n\n  function __decrementLoadingCounter(object) {\n    object = object === undefined ? this : object;\n    object.loadingCount -= 1;\n    object.loading = object.loadingCount > 0;\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .provider('$jsonapi', jsonapiProvider);\n\n  function jsonapiProvider(validateJS) {\n    var memory = {};\n    var names = [];\n    this.$get = jsonapiFactory;\n\n    function jsonapiFactory(\n      $log,\n      AngularJsonAPIResource,\n      AngularJsonAPISynchronizerSimple\n    ) {\n      return {\n        addResource: addResource,\n        getResource: getResource,\n        clearCache: clearCache,\n        allResources: allResources,\n        listResources: listResources,\n        addValidator: addValidator,\n        synchronizerSimple: AngularJsonAPISynchronizerSimple,\n\n        __proccesResults: __proccesResults\n      };\n\n      function addResource(schema, synchronizer) {\n        var resource = AngularJsonAPIResource.create(schema, synchronizer);\n\n        memory[schema.type] = resource;\n        names.push(schema.type);\n      }\n\n      function getResource(type) {\n        return memory[type];\n      }\n\n      function allResources() {\n        return memory;\n      }\n\n      function listResources() {\n        return names;\n      }\n\n      function clearCache() {\n        angular.forEach(memory, function(resource) {\n          resource.clearCache();\n        });\n      }\n\n      function addValidator(name, validator) {\n        if (!angular.isString(name)) {\n          $log.error('Validator name is not a string', name);\n          return;\n        } else if (validateJS.validators[name] === undefined) {\n          $log.warn('Redeclaring validator', name);\n        }\n\n        validateJS.validators[name] = validator;\n      }\n\n      function __proccesResults(results) {\n        var objects = {\n          data: [],\n          included: []\n        };\n\n        if (results === undefined) {\n          $log.error('Can\\'t proccess results:', results);\n          return;\n        }\n\n        var config = {\n          new: false,\n          synchronized: true,\n          stable: true,\n          pristine: false,\n          initialization: false\n        };\n\n        angular.forEach(results.included, function(data) {\n          objects.included.push(getResource(data.type).cache.addOrUpdate(data, config));\n        });\n\n        if (angular.isArray(results.data)) {\n          angular.forEach(results.data, function(data) {\n            objects.data.push(getResource(data.type).cache.addOrUpdate(data, config));\n          });\n        } else if (results.data !== undefined) {\n          objects.data.push(getResource(results.data.type).cache.addOrUpdate(results.data, config));\n        }\n\n        return objects;\n      }\n    }\n  }\n\n})();\n\n\n(function() {\n  'use strict';\n\n  angular.module('angular-jsonapi')\n  .config(function($logProvider) {\n    $logProvider.debugEnabled(false);\n  })\n  .run(function(validateJS, $q) {\n    validateJS.Promise = $q;\n  });\n})();\n"],"sourceRoot":"/source/"}